
services:
  db:
    image: postgres:latest
    # ports:
    #   - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    network_mode: host
  
  redis:
    image: redis:latest
    network_mode: host

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - /root/youtube-clone/media:/var/html/media
      - /root/youtube-clone/dash-script:/root/youtube-media/dash-script
    # volumes:
    #   - ./backend:/app #bind mounting
    # ports:
    #   - "5000:5000"
    env_file:
      - ./backend/.env
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@127.0.0.1:5432/${POSTGRES_DB}
    network_mode: host
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - /root/youtube-clone/media:/var/html/media

    #   - ./frontend:/app
    # ports:
    #   - "5173:5173"
    network_mode: host

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /root/youtube-clone/media:/var/html/media
      - /root/youtube-clone/dash-script:/root/youtube-media/dash-script
    network_mode: host
    depends_on:
      - frontend
      - backend

#docker compose can automatically load .env file locally as long as on same directory

volumes:
  postgres_data: #declares a volume 