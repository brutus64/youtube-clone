
services:
  mongo:
    image: mongo
    environment:
      GLIBC_TUNABLES: glibc.pthread.rseq=0
    volumes:
      - /root/youtube-clone/db.conf:/etc/mongod.conf
    network_mode: host
    command: mongod --quiet --logpath /dev/null 
  
  redis:
    image: redis:latest
    network_mode: host

  # memcached:
  #   image: memcached:latest
  #   network_mode: host
  #   command:
  #     - --conn-limit=1024
  #     - --memory-limit=64
  #     - --threads=4

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - /root/youtube-clone/media:/var/html/media
      - /root/youtube-clone/dash-script:/var/html
    # volumes:
    #   - ./backend:/app #bind mounting
    # ports:
    #   - "5000-5002:5000"
    env_file:
      - ./backend/.env
    environment:
      - DATABASE_URL=mongodb://localhost:27017/youtube
    network_mode: host
    # depends_on:
    #   db:
    #     condition: service_healthy
    #   memcached:
    #     condition: service_started

    deploy:
      replicas: 10
      # endpoint_mode: dnsrr
      resources:
        limits:
          # cpus: '1'  # Limit to 1 CPU core
          memory: 3g   # Limit to 2GB of memory

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - /root/youtube-clone/media:/var/html/media

    #   - ./frontend:/app
    # ports:
    #   - "5173:5173"
    network_mode: host

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /root/youtube-clone/media:/var/html/media
      - /root/youtube-clone/dash-script:/root/youtube-media/dash-script
      - /etc/letsencrypt:/etc/letsencrypt
    network_mode: host
    depends_on:
      - frontend
      - backend

#docker compose can automatically load .env file locally as long as on same directory

# volumes:
#   postgres_data: #declares a volume 
#   # postgres_replica1_data: