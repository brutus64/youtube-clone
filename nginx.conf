user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  4096;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"'
                      '$request_time';

    access_log  /var/log/nginx/access.log  main;

    #tcp_nopush     on;
    # client_header_buffer_size 1k;
    sendfile        on;
    tcp_nopush on;
    tcp_nodelay on;
    reset_timedout_connection on;
    access_log off;
    error_log /var/log/nginx/error.log crit;

    gzip on;
    gzip_disable "msie6";

    gzip_proxied expired no-cache no-store private auth;
    gzip_comp_level 2;
    gzip_min_length 10240;
    gzip_types text/plain text/css text/xml text/javascript application/json application/x-javascript application/xml application/xml+rss;
    keepalive_timeout  65;

    #gzip  on;
    

    include /etc/nginx/conf.d/*.conf;

    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, X-Requested-With, Accept';
    add_header 'Access-Control-Allow-Credentials' 'true';

    # upstream haproxy {
    #     server 127.0.0.1:8080; 
    # }
    upstream backend_servers {
        least_conn;
        server thewang.cse356.compas.cs.stonybrook.edu:5000 max_fails=1 fail_timeout=3s;
        server thewang.cse356.compas.cs.stonybrook.edu:5001 max_fails=1 fail_timeout=3s;
        server thewang.cse356.compas.cs.stonybrook.edu:5002 max_fails=1 fail_timeout=3s;
        server thewang.cse356.compas.cs.stonybrook.edu:5003 max_fails=1 fail_timeout=3s;
        server thewang.cse356.compas.cs.stonybrook.edu:5004 max_fails=1 fail_timeout=3s;
        # server 130.245.136.57:5000 max_fails=1 fail_timeout=3s;
        # server 130.245.136.57:5001 max_fails=1 fail_timeout=3s;
        keepalive 10;

    }

    upstream api_like_servers {
        least_conn;
        server 130.245.136.148:5000 max_fails=1 fail_timeout=3s;
        server 130.245.136.148:5001 max_fails=1 fail_timeout=3s;

        keepalive 4;
    }

    upstream api_video_servers {
        least_conn;
        server 130.245.136.148:5000 max_fails=1 fail_timeout=3s;
        server 130.245.136.148:5001 max_fails=1 fail_timeout=3s;
        server 130.245.136.137:5000 max_fails=1 fail_timeout=3s;
        server 130.245.136.137:5001 max_fails=1 fail_timeout=3s;

        keepalive 8;
    }

    server {
        add_header X-CSE356 "66d1f4e37f77bf55c5004d06";
        listen 80;
        server_name 130.245.136.200 thewang.cse356.compas.cs.stonybrook.edu;
        location / {
            return 301 https://$host$request_uri;
        }  
    }
    server {
        add_header X-CSE356 "66d1f4e37f77bf55c5004d06";
        listen 443 ssl;
        server_name thewang.cse356.compas.cs.stonybrook.edu;
        client_max_body_size 1000M; # allow larger files
        client_body_buffer_size 1000M;

        ssl_certificate /etc/letsencrypt/live/thewang.cse356.compas.cs.stonybrook.edu/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/thewang.cse356.compas.cs.stonybrook.edu/privkey.pem;

        location /api/videos {
        #     # proxy_pass http://haproxy;
            proxy_pass http://130.245.136.57:80;
        #     proxy_pass http://api_video_servers;
        #     proxy_connect_timeout 1000ms;
        #     proxy_read_timeout 10s;
        #     proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504; 
        #     proxy_next_upstream_timeout 3s;
        #     proxy_next_upstream_tries 3;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     # proxy_pass http://localhost:5000;
        #     # proxy_http_version 1.1;
        #     # proxy_set_header Upgrade $http_upgrade;
        #     # proxy_set_header Connection "upgrade";
        # }

        # location /api/like {
        # #     # proxy_pass http://haproxy;
        # #     # proxy_pass http://130.245.136.137:80;
        #     proxy_pass http://backend_servers;
        #     proxy_connect_timeout 1000ms;
        #     proxy_read_timeout 10s;
        #     proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504; 
        #     proxy_next_upstream_timeout 3s;
        #     proxy_next_upstream_tries 3;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # #     # # proxy_pass http://localhost:5000;
        # #     # proxy_http_version 1.1;
        # #     # proxy_set_header Upgrade $http_upgrade;
        # #     # proxy_set_header Connection "upgrade";
        }

        location /api {
            # proxy_pass http://haproxy;
            proxy_pass http://backend_servers;
            proxy_connect_timeout 1000ms;
            proxy_read_timeout 10s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504; 
            proxy_next_upstream_timeout 3s;
            proxy_next_upstream_tries 3;
            # proxy_pass http://localhost:5000;
            # proxy_http_version 1.1;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection "upgrade";

            #proxy_http_version 1.1;
            #proxy_set_header `Upgrade $http_upgrade;
            #proxy_set_header Connection "upgrade";
        }

        
        location /media/ {
            aio threads=default;
            alias /var/html/media/;
        }

        location / {
            proxy_pass http://localhost:5173;
            # react utilizes websockets by default, need to upgrade http version to allow websockets, upgraded to be able to handle it, but it can still handle other default versions.
            proxy_http_version 1.1;
            proxy_set_header `Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

    }
}